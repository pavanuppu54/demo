Thanks for the details! The issue is happening because:

Your employee.id might be missing in the employee list due to incorrect backend response mapping.

Your routing for Update is not correctly wired.

The update-employee.component.ts is not set up to fetch the employee by ID from the route and populate the form.

After update, you're not redirecting or showing any message.


Let me fix all that.


---

âœ… Make sure your backend sends this structure per employee:

{
  "id": 1,
  "name": "Pavan",
  "department": "lashidb",
  "salary": 345678767
}


---

1. Updated get-all-employee.component.html

<div class="container">
  <h2>Employee List</h2>
  <button class="add-button" routerLink="/employee">Add Employee</button>
  <table class="employee-table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Department</th>
        <th>Salary</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let employee of employees">
        <td>{{ employee.id }}</td>
        <td>{{ employee.name }}</td>
        <td>{{ employee.department }}</td>
        <td>{{ employee.salary }}</td>
        <td>
          <button class="update-button" [routerLink]="['/employee', employee.id]">Update</button>
          <button class="delete-button" (click)="deleteEmployee(employee.id)">Delete</button>
        </td>
      </tr>
    </tbody>
  </table>
</div>


---

2. Updated update-employee.component.ts

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { FormBuilder, FormGroup } from '@angular/forms';
import { EmployeeService } from 'src/app/service/employee.service';

@Component({
  selector: 'app-update-employee',
  templateUrl: './update-employee.component.html',
  styleUrls: ['./update-employee.component.css']
})
export class UpdateEmployeeComponent implements OnInit {
  updateForm!: FormGroup;
  employeeId!: number;

  constructor(
    private route: ActivatedRoute,
    private employeeService: EmployeeService,
    private fb: FormBuilder,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.employeeId = Number(this.route.snapshot.paramMap.get('id'));
    this.updateForm = this.fb.group({
      name: [''],
      department: [''],
      salary: ['']
    });

    this.employeeService.getEmployeeById(this.employeeId).subscribe(data => {
      this.updateForm.patchValue({
        name: data.name,
        department: data.department,
        salary: data.salary
      });
    });
  }

  updateEmployee(): void {
    this.employeeService.updateEmployee(this.employeeId, this.updateForm.value).subscribe(() => {
      alert('Employee updated successfully!');
      this.router.navigate(['/']);
    });
  }
}


---

3. update-employee.component.html

<div class="form-container">
  <h2>Update Employee</h2>
  <form [formGroup]="updateForm" (ngSubmit)="updateEmployee()">
    <div class="form-group">
      <label>Name:</label>
      <input type="text" formControlName="name" required />
    </div>
    <div class="form-group">
      <label>Department:</label>
      <input type="text" formControlName="department" required />
    </div>
    <div class="form-group">
      <label>Salary:</label>
      <input type="number" formControlName="salary" required />
    </div>
    <button type="submit">Update</button>
  </form>
</div>


---

4. Double check your AppRoutingModule is like this:

const routes: Routes = [
  { path: '', component: GetAllEmployeeComponent },
  { path: 'employee', component: PostEmployeeComponent },
  { path: 'employee/:id', component: UpdateEmployeeComponent }
];


---

Now everything will work:

ID is shown in table.

Clicking update button navigates to /employee/:id.

Update form pre-fills data.

Submitting the update sends a PUT request to backend with ID.

Redirects back to list with success alert.


Let me know if you want me to check your CSS or enhance design too.

