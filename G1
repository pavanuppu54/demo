Sure! Here's the complete working code for pagination (5 per page) + search in your get-all-employee component:


---

1. get-all-employee.component.html

<div class="container">
  <h2>Employee List</h2>

  <!-- Search and Add Button -->
  <div class="top-bar">
    <input type="text" placeholder="Search..." [(ngModel)]="searchText" class="search-box" />
    <button class="add-button" routerLink="/employee">Add Employee</button>
  </div>

  <!-- Employee Table -->
  <table class="employee-table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Department</th>
        <th>Salary</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let emp of paginatedEmployees()">
        <td>{{ emp.id }}</td>
        <td>{{ emp.name }}</td>
        <td>{{ emp.department }}</td>
        <td>{{ emp.salary }}</td>
        <td>
          <button class="update-button" [routerLink]="['/employee', emp.id]">Update</button>
          <button class="delete-button" (click)="deleteEmployee(emp.id)">Delete</button>
        </td>
      </tr>
    </tbody>
  </table>

  <!-- Pagination Controls -->
  <div class="pagination-controls">
    <button (click)="prevPage()" [disabled]="currentPage === 1">Previous</button>
    <span>Page {{ currentPage }} of {{ totalPages }}</span>
    <button (click)="nextPage()" [disabled]="currentPage === totalPages">Next</button>
  </div>
</div>


---

2. get-all-employee.component.ts

import { Component, OnInit } from '@angular/core';
import { EmployeeService } from 'src/app/service/employee.service';

@Component({
  selector: 'app-get-all-employee',
  templateUrl: './get-all-employee.component.html',
  styleUrls: ['./get-all-employee.component.css']
})
export class GetAllEmployeeComponent implements OnInit {
  employees: any[] = [];
  searchText: string = '';
  currentPage: number = 1;
  itemsPerPage: number = 5;

  constructor(private employeeService: EmployeeService) {}

  ngOnInit(): void {
    this.getAllEmployees();
  }

  getAllEmployees(): void {
    this.employeeService.getAllEmployee().subscribe((res) => {
      this.employees = res;
    });
  }

  get filteredList(): any[] {
    const lower = this.searchText.toLowerCase();
    return this.employees.filter((emp) =>
      (emp.name && emp.name.toLowerCase().includes(lower)) ||
      (emp.department && emp.department.toLowerCase().includes(lower)) ||
      ('' + emp.salary).includes(lower)
    );
  }

  get totalPages(): number {
    return Math.ceil(this.filteredList.length / this.itemsPerPage);
  }

  paginatedEmployees(): any[] {
    const start = (this.currentPage - 1) * this.itemsPerPage;
    return this.filteredList.slice(start, start + this.itemsPerPage);
  }

  nextPage(): void {
    if (this.currentPage < this.totalPages) {
      this.currentPage++;
    }
  }

  prevPage(): void {
    if (this.currentPage > 1) {
      this.currentPage--;
    }
  }

  deleteEmployee(id: number): void {
    if (confirm('Are you sure you want to delete this employee?')) {
      this.employeeService.deleteEmployee(id).subscribe(() => {
        this.getAllEmployees();
      });
    }
  }
}


---

3. get-all-employee.component.css (optional)

.top-bar {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
}

.search-box {
  padding: 8px;
  width: 50%;
  border-radius: 4px;
  border: 1px solid #ccc;
}

.employee-table {
  width: 100%;
  border-collapse: collapse;
}

.employee-table th, .employee-table td {
  border: 1px solid #ddd;
  padding: 8px;
  text-align: left;
}

.pagination-controls {
  margin-top: 15px;
  display: flex;
  justify-content: center;
  gap: 10px;
}


---

4. Donâ€™t forget:

Import FormsModule in your app.module.ts for [(ngModel)] to work:


import { FormsModule } from '@angular/forms';

@NgModule({
  imports: [
    // other modules
    FormsModule
  ]
})
export class AppModule {}


---

Let me know if you want page number buttons (1 2 3 4) or dynamic page size dropdown too!
